#!/usr/bin/env bash

set -ef -o pipefail

function getarg() { 
  local varibale_name="$1"
  local next_arg="${BASH_ARGV[$[BASH_ARGC-OPTIND]]}"
  declare -g "${varibale_name}"=""
  if [[ $next_arg =~ ^-$ ]] || [[ $next_arg =~ ^[^-] ]]; then
    declare -g "${varibale_name}"="${next_arg}"
    let "OPTIND++"
  fi
}

while getopts ":-:" options; do 
  case ${options} in
  *) case "${OPTARG}" in
      # p|public_key_file) getarg public_key_file ;;
      # f|public_key_folder) getarg public_key_folder ;;
      # d|default_public_key_file) getarg default_public_key_file;;
      j|jwt_token) getarg jwt_file ;;
esac; esac; done; shift $((OPTIND-1))

if [[ -z "$jwt_file" ]] && [[ ! -t 0 ]];then
  jwt="$(cat /dev/stdin)"
elif [[ -r "$jwt_file" ]];then
  jwt="$(cat $jwt_file)"
else
  echo "no JWT provided" >&2
  exit 1
fi

header_and_claims="${jwt%.*}"
header_base64="${header_and_claims%.*}"
claims_base64="${header_and_claims#*.}"
# signature="${jwt##*.}"

echo -n "${header_base64}=========================" | base64 --decode | jq .
echo -n "${claims_base64}=========================" | base64 --decode | jq .

